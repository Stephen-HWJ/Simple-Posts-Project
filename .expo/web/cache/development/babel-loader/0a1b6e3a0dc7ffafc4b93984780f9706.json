{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sh/Project/Simple-Posts-Project/components/cardList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from \"react-redux\";\nimport PostCard from \"./card\";\nimport { fetchPostsIfNeeded } from \"../redux/postsActions\";\n\nvar CardList = function (_React$Component) {\n  _inherits(CardList, _React$Component);\n\n  var _super = _createSuper(CardList);\n\n  function CardList() {\n    _classCallCheck(this, CardList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CardList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch;\n      dispatch(fetchPostsIfNeeded());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          posts = _this$props.posts,\n          ifFetching = _this$props.ifFetching;\n\n      if (ifFetching || posts.length <= 0) {\n        console.log(this.props);\n      }\n\n      return ifFetching || posts.length <= 0 ? React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, \"LOADING...\") : posts.map(function (post, index) {\n        return React.createElement(PostCard, {\n          title: post.title,\n          body: post.body,\n          id: index,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }\n        });\n      });\n    }\n  }]);\n\n  return CardList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var posts = state.posts,\n      ifFetching = state.ifFetching;\n  return {\n    posts: posts,\n    ifFetching: ifFetching\n  };\n};\n\nexport default connect(mapStateToProps)(CardList);","map":{"version":3,"sources":["/Users/sh/Project/Simple-Posts-Project/components/cardList.js"],"names":["React","connect","PostCard","fetchPostsIfNeeded","CardList","dispatch","props","posts","ifFetching","length","console","log","map","post","index","title","body","Component","mapStateToProps","state"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP;AACA,SAASC,kBAAT;;IAEMC,Q;;;;;;;;;;;;;wCACgB;AAAA,UACVC,QADU,GACG,KAAKC,KADR,CACVD,QADU;AAElBA,MAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACD;;;6BAEQ;AAAA,wBACuB,KAAKG,KAD5B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,UADR,eACQA,UADR;;AAEP,UAAIA,UAAU,IAAID,KAAK,CAACE,MAAN,IAAgB,CAAlC,EAAqC;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACD;;AACD,aAAOE,UAAU,IAAID,KAAK,CAACE,MAAN,IAAgB,CAA9B,GACL,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADK,GAGLF,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,eACR,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAED,IAAI,CAACE,KAAtB;AAA6B,UAAA,IAAI,EAAEF,IAAI,CAACG,IAAxC;AAA8C,UAAA,EAAE,EAAEF,KAAlD;AAAyD,UAAA,GAAG,EAAEA,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADQ;AAAA,OAAV,CAHF;AAOD;;;;EAlBoBd,KAAK,CAACiB,S;;AAqB7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,MACzBZ,KADyB,GACHY,KADG,CACzBZ,KADyB;AAAA,MAClBC,UADkB,GACHW,KADG,CAClBX,UADkB;AAEjC,SAAO;AAAED,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,UAAU,EAAVA;AAAT,GAAP;AACD,CAHD;;AAKA,eAAeP,OAAO,CAACiB,eAAD,CAAP,CAAyBd,QAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Text } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport PostCard from \"./card\";\nimport { fetchPostsIfNeeded } from \"../redux/postsActions\";\n\nclass CardList extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchPostsIfNeeded());\n  }\n\n  render() {\n    const { posts, ifFetching } = this.props;\n    if (ifFetching || posts.length <= 0) {\n      console.log(this.props);\n    }\n    return ifFetching || posts.length <= 0 ? (\n      <Text>LOADING...</Text>\n    ) : (\n      posts.map((post, index) => (\n        <PostCard title={post.title} body={post.body} id={index} key={index} />\n      ))\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { posts, ifFetching } = state;\n  return { posts, ifFetching };\n};\n\nexport default connect(mapStateToProps)(CardList);\n"]},"metadata":{},"sourceType":"module"}