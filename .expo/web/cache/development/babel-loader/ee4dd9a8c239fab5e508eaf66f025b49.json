{"ast":null,"code":"export var addPost = function addPost(postInfo) {\n  return {\n    type: \"ADD_POST\",\n    postInfo: postInfo\n  };\n};\n\nvar requestPosts = function requestPosts(url) {\n  return {\n    type: \"REQUEST_POSTS\",\n    url: url\n  };\n};\n\nvar receivePosts = function receivePosts(json) {\n  return {\n    type: \"RECEIVE_POSTS\",\n    posts: json.slice(0, 10)\n  };\n};\n\nvar fetchPosts = function fetchPosts(url) {\n  return function (dispatch) {\n    dispatch(requestPosts(url));\n    return fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(receivePosts(json));\n    });\n  };\n};\n\nvar shouldFetchPosts = function shouldFetchPosts(state) {\n  if (!state.posts) {\n    return true;\n  } else if (state.isFetching) {\n    return false;\n  }\n\n  return true;\n};\n\nexport var fetchPostsIfNeeded = function fetchPostsIfNeeded() {\n  return function (dispatch, getState) {\n    console.log(getState());\n\n    if (shouldFetchPosts(getState())) {\n      return dispatch(fetchPosts(\"https://jsonplaceholder.typicode.com/posts\"));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/sh/Project/Simple-Posts-Project/redux/postsActions.js"],"names":["addPost","postInfo","type","requestPosts","url","receivePosts","json","posts","slice","fetchPosts","dispatch","fetch","then","response","shouldFetchPosts","state","isFetching","fetchPostsIfNeeded","getState","console","log"],"mappings":"AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD;AAAA,SAAe;AACpCC,IAAAA,IAAI,EAAE,UAD8B;AAEpCD,IAAAA,QAAQ,EAARA;AAFoC,GAAf;AAAA,CAAhB;;AAKP,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAS;AAC5B,SAAO;AACLF,IAAAA,IAAI,EAAE,eADD;AAELE,IAAAA,GAAG,EAAHA;AAFK,GAAP;AAID,CALD;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,SAAO;AACLJ,IAAAA,IAAI,EAAE,eADD;AAELK,IAAAA,KAAK,EAAED,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,EAAd;AAFF,GAAP;AAID,CALD;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACL,GAAD,EAAS;AAC1B,SAAO,UAACM,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACP,YAAY,CAACC,GAAD,CAAb,CAAR;AACA,WAAOO,KAAK,CAACP,GAAD,CAAL,CACJQ,IADI,CACC,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACP,IAAT,EAAd;AAAA,KADD,EAEJM,IAFI,CAEC,UAACN,IAAD;AAAA,aAAUI,QAAQ,CAACL,YAAY,CAACC,IAAD,CAAb,CAAlB;AAAA,KAFD,CAAP;AAGD,GALD;AAMD,CAPD;;AASA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,MAAI,CAACA,KAAK,CAACR,KAAX,EAAkB;AAChB,WAAO,IAAP;AACD,GAFD,MAEO,IAAIQ,KAAK,CAACC,UAAV,EAAsB;AAC3B,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAPD;;AASA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtC,SAAO,UAACP,QAAD,EAAWQ,QAAX,EAAwB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,EAApB;;AACA,QAAIJ,gBAAgB,CAACI,QAAQ,EAAT,CAApB,EAAkC;AAChC,aAAOR,QAAQ,CAACD,UAAU,CAAC,4CAAD,CAAX,CAAf;AACD;AACF,GALD;AAMD,CAPM","sourcesContent":["export const addPost = (postInfo) => ({\n  type: \"ADD_POST\",\n  postInfo,\n});\n\nconst requestPosts = (url) => {\n  return {\n    type: \"REQUEST_POSTS\",\n    url,\n  };\n};\n\nconst receivePosts = (json) => {\n  return {\n    type: \"RECEIVE_POSTS\",\n    posts: json.slice(0, 10),\n  };\n};\n\nconst fetchPosts = (url) => {\n  return (dispatch) => {\n    dispatch(requestPosts(url));\n    return fetch(url)\n      .then((response) => response.json())\n      .then((json) => dispatch(receivePosts(json)));\n  };\n};\n\nconst shouldFetchPosts = (state) => {\n  if (!state.posts) {\n    return true;\n  } else if (state.isFetching) {\n    return false;\n  }\n  return true;\n};\n\nexport const fetchPostsIfNeeded = () => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    if (shouldFetchPosts(getState())) {\n      return dispatch(fetchPosts(\"https://jsonplaceholder.typicode.com/posts\"));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}